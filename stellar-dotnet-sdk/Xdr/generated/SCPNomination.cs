// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace stellar_dotnet_sdk.xdr
{
// === xdr source ============================================================

//  struct SCPNomination
//  {
//      Hash quorumSetHash; // D
//      Value votes<>;      // X
//      Value accepted<>;   // Y
//  };

//  ===========================================================================
    public class SCPNomination
    {
        public Hash QuorumSetHash { get; set; }
        public Value[] Votes { get; set; }
        public Value[] Accepted { get; set; }

        public static void Encode(XdrDataOutputStream stream, SCPNomination encodedSCPNomination)
        {
            Hash.Encode(stream, encodedSCPNomination.QuorumSetHash);
            var votessize = encodedSCPNomination.Votes.Length;
            stream.WriteInt(votessize);
            for (var i = 0; i < votessize; i++) Value.Encode(stream, encodedSCPNomination.Votes[i]);
            var acceptedsize = encodedSCPNomination.Accepted.Length;
            stream.WriteInt(acceptedsize);
            for (var i = 0; i < acceptedsize; i++) Value.Encode(stream, encodedSCPNomination.Accepted[i]);
        }

        public static SCPNomination Decode(XdrDataInputStream stream)
        {
            var decodedSCPNomination = new SCPNomination();
            decodedSCPNomination.QuorumSetHash = Hash.Decode(stream);
            var votessize = stream.ReadInt();
            decodedSCPNomination.Votes = new Value[votessize];
            for (var i = 0; i < votessize; i++) decodedSCPNomination.Votes[i] = Value.Decode(stream);
            var acceptedsize = stream.ReadInt();
            decodedSCPNomination.Accepted = new Value[acceptedsize];
            for (var i = 0; i < acceptedsize; i++) decodedSCPNomination.Accepted[i] = Value.Decode(stream);
            return decodedSCPNomination;
        }
    }
}